<!--
  NuGet automatically imports this file into any project that has a PackageReference to 'SampleTasks'.
  To see this in action, execute "dotnet restore" on the 3-NuGet example and look in the obj/ folder for
  a file named Web.csproj.g.nuget.targets. You'll see inside that it contains an "Import" to this file.
 -->
<Project>
    <UsingTask TaskName="ReplaceFileText" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
      <ParameterGroup>
        <filename_input ParameterType="System.String" Required="true" />
        <filename_output ParameterType="System.String" Required="true" />
        <text_replacing ParameterType="System.String" Required="true" />
        <text_replacement ParameterType="System.String" Required="true" />
      </ParameterGroup>
      <Task>
        <Reference Include="System.Core" />
        <Using Namespace="System" />
        <Using Namespace="System.IO" />
        <Using Namespace="System.Text.RegularExpressions" />
        <Code Type="Fragment" Language="cs">
          <![CDATA[
                string content = File.ReadAllText(filename_input);
                File.WriteAllText
                    (
                        filename_output,
                        content
                            .Replace
                                (
                                    text_replacing, 
                                    text_replacement
                                )
                            .Replace
                                (
                                    "////", 
                                    @"\"
                                )
                    );
              ]]>
        </Code>
      </Task>
    </UsingTask>
    
     <UsingTask TaskName="ReplaceFileTextRegex" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
      <ParameterGroup>
        <filename_input ParameterType="System.String" Required="true" />
        <filename_output ParameterType="System.String" Required="true" />
        <match_regex ParameterType="System.String" Required="true" />
        <text_replacement ParameterType="System.String" Required="true" />
      </ParameterGroup>
      <Task>
        <Reference Include="System.Core" />
        <Using Namespace="System" />
        <Using Namespace="System.IO" />
        <Using Namespace="System.Text.RegularExpressions" />
        <Code Type="Fragment" Language="cs">
          <![CDATA[
                File.WriteAllText
                    (
                        filename_output,
                        Regex
                            .Replace
                                (
                                    File.ReadAllText(filename_input), 
                                    match_regex, 
                                    text_replacement
                                )
                    );
              ]]>
        </Code>
      </Task>
    </UsingTask>

    <PropertyGroup>  
        <!--
        <EnableDefaultItems>false</EnableDefaultItems>
        -->
        <BindingsHelperFolder>hwolisticware-generated</BindingsHelperFolder>  
        <BindningApiXml>$(IntermediateOutputPath)\api.xml</BindningApiXml>  
    </PropertyGroup>  
     <ItemGroup>
        <!--
        MCWs C# code is emitted to folowing folder:
        $(IntermediateOutputPath = "obj/$(Configuration)/generated/src/"
        $(IntermediateOutputPath = "obj/Debug/generated/src/"
        $(IntermediateOutputPath = "obj/Release/generated/src/"
        -->
        <BindingMCWSourceFiles Include="$(IntermediateOutputPath)\generated\src\*"></BindingMCWSourceFiles>  
        <Compile Include="$(BindingsHelperFolder)\*.cs" />
    </ItemGroup>
    
    <Target 
        Name="BindingsHelpersClean" 
        BeforeTargets="Build"
        >  
        <Message Text="mc++ AfterTargets=Clean" />  
        <RemoveDir Directories="$(BindingsHelperFolder)" />  
    </Target>


    <!--
    Copying/moving MCWs (Managed Callable Wrappers) from 

        obj/generated/src/*.cs 
        $(IntermediateOutputPath)\generated\src\*.cs

    to $(BindingsHelperFolder.
    
    Need to inject it before:

    Target "AddBindingsToCompile" 
    in file 
    "/Library/Frameworks/Mono.framework/External/xbuild/Xamarin/Android/Xamarin.Android.Bindings.targets" 
    from project 
    "/Projects/hw-tools/HolisticWare.Xamarin.Tools.Bindings.XamarinAndroid.Intellisense/samples/XamarinAndroid.Bindings.Sample/XamarinAndroid.Bindings.Sample.csproj" 
    (target "ResolveReferences" depends on it):
    -->
    <Target 
        Name="BindingsHelpersPrepare" 
        BeforeTargets="AddBindingsToCompile"
        >  

        <Message Text="mc++ AfterTargets=BindingMCWSourceFiles" />  
        <RemoveDir Directories="$(BindingsHelperFolder)" />  
        <Message Text="mc++ BeforeTargets=Compile" />  
        <MakeDir Directories="$(BindingsHelperFolder)" />
        <Copy SourceFiles="$(BindningApiXml)" DestinationFolder="$(BindingsHelperFolder)/" />  
        <CreateItem Include="$(IntermediateOutputPath)\generated\src\*.cs">
          <Output TaskParameter="Include" ItemName="BindingsCSharpFiles"/>
        </CreateItem>
        <Move SourceFiles="@(BindingsCSharpFiles)" DestinationFolder="$(BindingsHelperFolder)\" />

        <ReplaceFileText 
            Condition="'$(TargetFramework)' == ''"
            filename_input="$(IntermediateOutputPath)\generated\src\$(MSBuildProjectName).projitems" 
            filename_output="$(IntermediateOutputPath)\generated\src\$(MSBuildProjectName).projitems" 
            text_replacing="MSBuildThisFileDirectory)" 
            text_replacement="MSBuildThisFileDirectory)\\\\..\\\\..\\\\$(BindingsHelperFolder)"
            >            
        </ReplaceFileText>
        
        <ReplaceFileText 
            Condition="'$(TargetFramework)' == 'monoandroid81'"
            filename_input="$(IntermediateOutputPath)\generated\src\$(MSBuildProjectName).projitems" 
            filename_output="$(IntermediateOutputPath)\generated\src\$(MSBuildProjectName).projitems" 
            text_replacing="MSBuildThisFileDirectory)" 
            text_replacement="MSBuildThisFileDirectory)\\\\..\\\\..\\\\$(BindingsHelperFolder)"
            >            
        </ReplaceFileText>

        <CreateItem Include="$(BindingsHelperFolder)\*.cs">
          <Output TaskParameter="Include" ItemName="BindingsCSharpFilesMoved"/>
        </CreateItem>
        <ItemGroup>
            <Folder Include="$(BindingsHelperFolder)" />
            <Compile Include="$(BindingsHelperFolder)\*.cs">
                <Visible>true</Visible>
            </Compile>
        </ItemGroup>
        
    </Target>

    <!--
    Decompiling with JavaP
    https://github.com/moljac/HolisticWare.WebSite.CompositeC1.Content.MarkDown/blob/master/xamarin/products/xamarin-platform/traditional-standard/xamarin-android/advanced/bindings/java-bindings/analysis-java-binaries-jars-decompiling.md
    
    javap \
        -classpath ../../../../externals/android/grpc-stub-1.14.0.jar \
            $(jar -tf ../../../../externals/android/grpc-stub-1.14.0.jar | grep "class$" | sed s/\.class$//) \
            >> grpc-stub-1.14.0.jar.class.java.txt

                javap -classpath ../../../../externals/android/grpc-stub-1.14.0.jar \
                        \$\(jar -tf ../../../../externals/android/grpc-stub-1.14.0.jar | grep &quot;class$&quot; | sed s/\.class$//\) \
                        >> grpc-stub-1.14.0.jar.class.java.txt
    -->
    <Target
        Name="DecompileJavaProcyon" 
        AfterTargets="Build"
        >

        <Message  Text="mc++ Decompile = $(Name)" />
        <Exec 
            Command=
                "
    java -jar ./procyon-decompiler-0.5.30.jar -jar ../../../../externals/android/grpc-stub-1.14.0.jar dump/
                "
            /> 
    </Target>
    
    <!--
    Decompiling with Procyon
    https://bitbucket.org/mstrobel/procyon/wiki/Java%20Decompiler

    java \
        -jar ./procyon-decompiler-0.5.30.jar \
        -jar ../../../../externals/android/grpc-stub-1.14.0.jar \
        dump/
    -->
    <Target
        Name="DecompileJavaJavaP" 
        AfterTargets="Build"
        >
        <Message  Text="mc++ Decompile = $(Name)" />
    </Target>


    <!--
    Decompiling with CFR
    http://www.benf.org/other/cfr/

    java \
        -jar ./cfr_0_132.jar \
        -jar ../../../../externals/android/grpc-protobuf-lite-1.14.0.jar
    -->
    <Target
        Name="DecompileJavaJavaP" 
        AfterTargets="Build"
        >
        <Message  Text="mc++ Decompile = $(Name)" />
    </Target>

</Project>
